[{"content":"\u003cp\u003eGalaga3D is a 3D Space Shooter Game based off of the original Galaga arcade game. Fight and evade countless waves of enemies using your blasters or lasers and try to beat your own high scores.\u003c/p\u003e\n\u003cp\u003eThe game was developed with a team of three during the VGDC 2022 Spring Jam, where the theme was recycle. The game was developed using Unity and all game models were created using Blender.\u003c/p\u003e\n\u003cp\u003eThe team included:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUdayan Senapati\u003c/li\u003e\n\u003cli\u003eMitchell Dunning\u003c/li\u003e\n\u003cli\u003ePhillips Albright\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eGalaga3D is playable on browser on \u003ca href=\"https://phillips-albright.itch.io/galaga3d\"\u003eitch.io\u003c/a\u003e can be downloaded for Windows.\u003c/p\u003e\n\u003ch2 id=\"my-work\"\u003eMy Work\u003c/h2\u003e\n\u003cp\u003eDue to the Game Jam\u0026rsquo;s theme being Recycle, I reused my \u003ca href=\"https://chonibi.itch.io/asteroids-3d\"\u003eAsteroid3D\u003c/a\u003e Project from my Computer Graphics course. The project included the ship\u0026rsquo;s controls and abilities, wave system, high score system, HUD UI, and Menu UI.\u003c/p\u003e\n\u003cp\u003eFor the new game, I designed and implemented the AI Wave system using the\u003ca href=\"https://www.red3d.com/cwr/boids/\"\u003eBoid Flocking\u003c/a\u003e algorithm. The waves contained multiple squads that were led by a squad leader. The goal of the system was to recreate a similar Galaga wave system that seemed more realistic for a 3D space. I implemented enemy types, including the base Wasp enemy and Shielded Beetle enemy. The Flocking system can be adjusted through different heuristics including separation, alignment, cohesion, and aggression. The aggression heuristic increases each waves as enemies would target the player ship more often.\u003c/p\u003e\n\u003cp\u003eContributions:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePlayer Ship\n\u003cul\u003e\n\u003cli\u003eShip Controls (Thrust, Roll)\u003c/li\u003e\n\u003cli\u003eCamera Controls (Turn, Pan)\u003c/li\u003e\n\u003cli\u003eInput System (Mouse and Keyboard and Controller Input)\u003c/li\u003e\n\u003cli\u003eThird Person/First Person Camera Switching\u003c/li\u003e\n\u003cli\u003eBoosting\u003c/li\u003e\n\u003cli\u003eWeapons (Blaster Projectile and Laser Hitscan)\u003c/li\u003e\n\u003cli\u003eShip Health Component\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWave System\n\u003cul\u003e\n\u003cli\u003eFlocking System\u003c/li\u003e\n\u003cli\u003eEnemy Class\n\u003cul\u003e\n\u003cli\u003eEnemy Aggression\u003c/li\u003e\n\u003cli\u003eEnemy Health\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eHigh Score System\u003c/li\u003e\n\u003cli\u003eUser Interface\n\u003cul\u003e\n\u003cli\u003eMenu Interfaces\u003c/li\u003e\n\u003cli\u003eIn-Game HUD\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","description":"A 3D Space Shooter based off of the original Galaga arcade game. ","image":"/images/projects/galaga3d/galaga3d-1.png","permalink":"https://usenapati.github.io/games/galaga3d/","title":"Galaga3D"},{"content":"\u003cp\u003eThe C++ Game Engine (Name TBD) was created for my Game Engine Foundations course. This was a solo project that was developed throughout my semester with multiple iterations. Each iteration added new features and systems related to topics such as Collision Detection, Input Handling, Multithreading, Networking, Time Scale, Game-Object Models, Event Management, and Scripting. Over the course of the class, I developed two games using the engine: a multiplayer side-scroller platformer and a top-down survival game with enemy AI.\u003c/p\u003e\n\u003cp\u003eContact me if you want to access the source code and games.\u003c/p\u003e\n\u003ch2 id=\"my-work\"\u003eMy Work\u003c/h2\u003e\n\u003cp\u003eContribtions:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIteration 1:\n\u003cul\u003e\n\u003cli\u003eCreated a simple platformer with collision detection with player and platform objects that took keyboard inputs\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIteration 2:\n\u003cul\u003e\n\u003cli\u003eImplemented multithreading which would handle player and platform movement\u003c/li\u003e\n\u003cli\u003eImplemented game time so the player could control the speed of the game (half speed, normal speed, and double speed)\u003c/li\u003e\n\u003cli\u003eUsed ZeroMQ\u0026rsquo;s library to implement networking. The clients could communicate to the server using the REQ-REP model.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIteration 3:\n\u003cul\u003e\n\u003cli\u003eDesigned and implemented the Entity-Component game object model.\u003c/li\u003e\n\u003cli\u003eRefactored the entire engine to allow the entity-component system to interact with previous features.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIteration 4:\n\u003cul\u003e\n\u003cli\u003eDesigned and implemented Event Management System that was tied to Player Spawn and Death, Client Connect and Disconnects, Player Collision and User Input.\u003c/li\u003e\n\u003cli\u003eRedesigned the collision detection system for more accuracy.\u003c/li\u003e\n\u003cli\u003eCreated a debug mode to help monitor the player\u0026rsquo;s transform information, game time, and hitboxes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIteration 5/Final Product:\n\u003cul\u003e\n\u003cli\u003eUsed Duktape and Dukglue libraries to implement scripting.\n\u003cul\u003e\n\u003cli\u003eThe Player can change the color of platform or \u0026ldquo;kill\u0026rdquo; the player with the scripts.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDeveloped two games: a multiplayer platformer and a single-player top down arcade survival.\n\u003cul\u003e\n\u003cli\u003eFor the survival game, I used the behavior tree code from my Game AI class and created enemy AI that can chase the user.\u003c/li\u003e\n\u003cli\u003eCreated a sword that can kill the the enemies if they collide.\u003c/li\u003e\n\u003cli\u003eUsed Sprites from Legend of Zelda and created an animator component for the player and enemy with a walk animation.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","description":"A 2D Game engine developed for my class, Game Engine Foundations as a solo project. ","image":"/images/projects/CSC481-2DGameEngine/gameplay.gif","permalink":"https://usenapati.github.io/games/2dgameengine/","title":"2D C++ Game Engine"},{"content":"\u003cp\u003eCLONE WARS is a AR Tower Defense Game based in the Star Wars universe. The Player scans a 3D space, then they can add towers and enemy spawners. Each round, the towers must defend the player’s ship from waves of enemies. The player can use points earned each round to buy more towers.\u003c/p\u003e\n\u003cp\u003eThe game was originally a friend\u0026rsquo;s school project that grew into a personal project with a team of four. The game was developed using Unity and Google\u0026rsquo;s ARCore.\u003c/p\u003e\n\u003cp\u003eClone Wars is downloadable on the \u003ca href=\"https://play.google.com/store/apps/details?id=com.TTDDevs.CloneWARsTTD\u0026amp;hl=en_US\u0026amp;gl=US\"\u003eGoogle Play Store\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"my-work\"\u003eMy Work\u003c/h2\u003e\n\u003cp\u003eContributions:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAdded health bars over enemies to display their health to the player.\u003c/li\u003e\n\u003cli\u003eCreated a ragdoll animation for the enemies when they die.\u003c/li\u003e\n\u003cli\u003eUsed Unity’s LineRenderer to display the path the enemy waves would follow.\u003c/li\u003e\n\u003cli\u003eCreated a Credit System that allowed the Player to earn credits for each enemy they defeated. The credit amount would depend on the difficulty of the unit. The Credits that the player earned could be spent on buying more towers.\u003c/li\u003e\n\u003c/ul\u003e\n","description":"An AR Tower Defense game built using Unity with Google ARCore SDK and published on Google Play Store.","image":"/images/projects/clonewars/gameplay.gif","permalink":"https://usenapati.github.io/games/clonewars/","title":"CLONE WARS Tabletop Tower Defense"},{"content":"\u003cp\u003eNekomancer is a 3D platformer whre you play as a cat, who was raised from the dead, and now have to search for ingredients to make a cure for your zombification. Throughout the game, you collect ingredients to make potions. The potions grant different powers, including super speed, static cling, or elasticity.\u003c/p\u003e\n\u003cp\u003eNekomancer was developed with a team in a eight during the Red Storm and VGDC @ NCSU Game Jam, where the theme was zombie cats. The game was developed using Unity and the game assets were modeled using Blender or acquired from the Unity Marketplace.\u003c/p\u003e\n\u003cp\u003eNekomancer is playable on \u003ca href=\"https://phillips-albright.itch.io/nekomancer\"\u003eitch.io\u003c/a\u003e through the browser or can be downloaded for Windows.\u003c/p\u003e\n\u003ch2 id=\"my-work\"\u003eMy Work\u003c/h2\u003e\n\u003cp\u003eFor this game, I implemented the super speed ability and collaborated with other programmers to design the ability system. Super Speed was based on the Speed Booster from Super Metroid and was tuned to work in a 3D Platformer. I designed and built the tower section of the game map using marketplace assets. I created different obstacles, specifically temporary platforms that disappear after the player stands the platfrom for a period of time. Lastly, I modeled some of the ingredients that the player acquired for the potion.\u003c/p\u003e\n\u003cp\u003eContributions:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePlayer Abilities\n\u003cul\u003e\n\u003cli\u003eImplemented Speed Booster Ability\u003c/li\u003e\n\u003cli\u003eDesigned Ability System\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eEnvironment\n\u003cul\u003e\n\u003cli\u003eDesigned and built Tower section of Witch\u0026rsquo;s Hut\u003c/li\u003e\n\u003cli\u003eCreated Temporary Platforms\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eModeling\n\u003cul\u003e\n\u003cli\u003eModeled Ingredient Pickups (Frog Legs)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","description":"A 3D Platformer built during the NCSU/Red Storm Jam where the theme was Zombie Cats.","image":"/images/projects/nekomancer/icon.png","permalink":"https://usenapati.github.io/games/nekomancer/","title":"Nekomancer"},{"content":"\u003cp\u003eMecha Mania is a multiplayer first-person shooter inspired by Titanfall 2 and the Gundam franchise. The game is being developed in Unreal Engine 5 and will be available for Windows. Compete in a 3v3 team deathmatch where you must gather mech parts and obliterate the enemy team with your completed mech. Throughout the arena, you\u0026rsquo;ll have an arsenal of weapons and tools to help you stop the enemy team. Use your movement abilities, including wallrunning, sliding, and climbing, to traverse your environment and outmaneuver your enemies.\u003c/p\u003e\n\u003cp\u003eThe project\u0026rsquo;s goal is to create a complete networked multiplayer game in Unreal Engine using C++, while learning the core fundamentals of the first-person shooter genre.\u003c/p\u003e\n\u003ch2 id=\"my-work\"\u003eMy Work\u003c/h2\u003e\n\u003cp\u003eFor this project, I focused on implementing a first-person shooter (FPS) game using C++ and Blueprints in Unreal Engine 5. This project served as a learning opportunity for me to gain experience with developing a networked multiplayer game in Unreal Engine 5. Additionally, I wanted to understand and recreate features from modern FPS games, such as different weapon types, player abilities, and objective-based game modes.\u003c/p\u003e\n\u003cp\u003eContributions:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMultiplayer Plugin\n\u003cul\u003e\n\u003cli\u003eIndependent Plugin that connects to the Steam Online Subsystem (Requires Steam Login)\u003c/li\u003e\n\u003cli\u003eHandles Hosting and Joining Sessions\u003c/li\u003e\n\u003cli\u003eLoads Lobby and Game Map\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFirst Person/Third Person Character Class\n\u003cul\u003e\n\u003cli\u003eLocomotion and Camera Controls (3Cs)\u003c/li\u003e\n\u003cli\u003eSwap between First Person and Third Person Camera\u003c/li\u003e\n\u003cli\u003eKeyboard and Controller Support\u003c/li\u003e\n\u003cli\u003eAnimation State Machine (Aim Offsets, Blendspaces, and IK)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCombat Component Class\n\u003cul\u003e\n\u003cli\u003eHandles Character\u0026rsquo;s Weapon Inventory\u003c/li\u003e\n\u003cli\u003eWeapon Firing and Reloading Montages\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWeapon Class\n\u003cul\u003e\n\u003cli\u003eProjectile Spawning\u003c/li\u003e\n\u003cli\u003eFire Effects\u003c/li\u003e\n\u003cli\u003eHit Events\u003c/li\u003e\n\u003cli\u003eBullet Shell Physics\u003c/li\u003e\n\u003cli\u003eDifferent Weapon Types (Projectile and Hitscan)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCharacter Ability Component Class\n\u003cul\u003e\n\u003cli\u003eInterfaces with Character Movement Component to allow for movement abilities\u003c/li\u003e\n\u003cli\u003eWall Running\u003c/li\u003e\n\u003cli\u003eSliding\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMatch State Class\n\u003cul\u003e\n\u003cli\u003eGame Timer\u003c/li\u003e\n\u003cli\u003eCustom States\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"the-future\"\u003eThe Future\u003c/h2\u003e\n\u003cp\u003eThis project is currently in active development. I am currently working on fleshing out the player abilities and polishing the game mode. Afterwards, I plan to create the game map and AI bot system. Next, I want to add more features inspired by the Gundam franchise, particularly a Gundam that can be controlled by the player. Lastly, I am using Lyra Game models and animations, as well as Epic Games\u0026rsquo; weapon models and animations, which are sufficient for early development. Depending on whether I release this project publicly, I am interested in learning more about low-poly modeling and may try to create low-poly assets based on the PS1 Gundam games.\u003c/p\u003e\n","description":"A Multiplayer FPS fan game inspired by Titanfall 2 and Gundam franchise.","image":"/images/projects/mechamania/gundamevolution2.jpg","permalink":"https://usenapati.github.io/games/mechamania/","title":"Mecha Mania"},{"content":"\u003ciframe width=\"700\" height=\"443\" src=\"https://www.youtube.com/embed/KGzzOUnl360\" title=\"Transfusion Demo ECGC2023\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen\u003e\u003c/iframe\u003e\r\n\u003cp\u003eTransfusion is a VR sword-fighting action game about violence. It takes place in a brutal alien world inspired by a fusion of Aztec and Roman cultures. You play as a prisoner who has to earn their freedom by slaying wave after wave of enemies in gladiatorial combat, as well as utilizing the gifts of a bloodthirsty deity. Along the way, you uncover a story that explores themes of violence, identity and sacrifice. The game is meant to challenge you both as a player and as a human!\u003c/p\u003e\n\u003cp\u003eThe project started as a capstone project for the Video Game Development in late 2021 has grown into a hobby project with a team of seven core developers. Currently the game is still in development at this time. The Alpha is downloadable in \u003ca href=\"https://udayansenapati.itch.io/transfusion\"\u003eitch.io\u003c/a\u003e and is playable on Windows with SteamVR.\u003c/p\u003e\n\u003ch2 id=\"the-team\"\u003eThe Team\u003c/h2\u003e\n\u003cimg src=\"/images/projects/transfusion/ECGC2023.jpg\" alt=\"The Team\" style='height: 100%; width: 100%; object-fit: contain'\u003e  \r\n\u003cul\u003e\n\u003cli\u003eWill Carpenter - Director/Project Lead\u003c/li\u003e\n\u003cli\u003eUdayan Senapati - Programming Lead\u003c/li\u003e\n\u003cli\u003eMeghan Tankersley- Art Lead\u003c/li\u003e\n\u003cli\u003eEthan Smith - Level Designer, Modeler\u003c/li\u003e\n\u003cli\u003eBailey Atwood - Musician, Modeler\u003c/li\u003e\n\u003cli\u003eMitchell Dunning - Modeler, Tech Artist\u003c/li\u003e\n\u003cli\u003eNathan Royall - Character Artist\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"my-work\"\u003eMy Work\u003c/h2\u003e\n\u003cp\u003eFor this project, I mainly focused on the enemy features, including their blueprint, animations, AI behavior, coordination with other enemies, and spawning. Additionally, I worked on the dismemberment system, which is my personal favorite feature. I also collaborated on the VR weapon blueprint and designed the combat and power-up systems.\u003c/p\u003e\n\u003cp\u003eContributions:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eVR Weapon Class\n\u003cul\u003e\n\u003cli\u003eDetecting Slicing and Stabbing Conditions\u003c/li\u003e\n\u003cli\u003eCollision Detection\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eEnemy Class\n\u003cul\u003e\n\u003cli\u003eLocomotion\u003c/li\u003e\n\u003cli\u003eAnimation\u003c/li\u003e\n\u003cli\u003eAI Behavior\u003c/li\u003e\n\u003cli\u003eAttacking\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDismemberment System\n\u003cul\u003e\n\u003cli\u003eInitial Procedural Slicing\u003c/li\u003e\n\u003cli\u003eJoint-based Slicing\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAI System\n\u003cul\u003e\n\u003cli\u003eBehavior Tree (Chasing, Strafing, and Attacking)\u003c/li\u003e\n\u003cli\u003eCombat Director\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eGame Logic\n\u003cul\u003e\n\u003cli\u003eSpawning Enemy Waves\u003c/li\u003e\n\u003cli\u003eArcade Mode\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePlayer Ability Design\n\u003cul\u003e\n\u003cli\u003eBlood-based abilities and upgrades\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"images\"\u003eImages\u003c/h2\u003e\n\u003cp\u003eLizard Enemy and Dummy Enemy Model\n\u003cimg src=\"/images/projects/transfusion/enemy.png\" alt=\"Enemy Models\" style='height: 100%; width: 100%; object-fit: contain'\u003e\u003c/p\u003e\n\u003cp\u003e\u003c/p\u003e \r\nBlood-based Player Abiities (Courtesy of Meghan)\r\n\u003cimg src=\"/images/projects/transfusion/Sword2.0.PNG\" alt=\"Enemy Models\" style='height: 100%; width: 100%; object-fit: contain'\u003e  \r\nEarly Combat Flow Design\r\n\u003cimg src=\"/images/projects/transfusion/CombatFlowDiagram-OneEnemy.png\" alt=\"Early Combat Flow Design\" style='height: 100%; width: 100%; object-fit: contain'\u003e  \r\n\u003cimg src=\"/images/projects/transfusion/LIZARDS.png\" alt=\"Enemy Models\" style='height: 100%; width: 100%; object-fit: contain'\u003e  \r\n\u003chr\u003e\n","description":"A VR Hack and Slash game about slicing your foes as you try to survive in an alien gladiator arena","image":"/images/projects/transfusion/Transfusion-Blk.png","permalink":"https://usenapati.github.io/games/transfusion/","title":"Transfusion"}]